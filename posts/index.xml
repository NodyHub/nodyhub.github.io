<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Nody´s blog</title>
    <link>//blog.nody.cc/posts/</link>
    <description>Recent content in Posts on Nody´s blog</description>
    <image>
      <title>Nody´s blog</title>
      <url>//blog.nody.cc/images/logo.png</url>
      <link>//blog.nody.cc/images/logo.png</link>
    </image>
    <generator>Hugo -- 0.128.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Aug 2020 16:30:00 +0200</lastBuildDate>
    <atom:link href="//blog.nody.cc/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pentesting Cloud Sandboxes in the wild</title>
      <link>//blog.nody.cc/posts/bsides-munich-2020/</link>
      <pubDate>Sun, 23 Aug 2020 16:30:00 +0200</pubDate>
      <guid>//blog.nody.cc/posts/bsides-munich-2020/</guid>
      <description>&lt;p&gt;Matthias and I talked about cloud sandboxes on &lt;a href=&#34;https://2020.bsidesmunich.org/&#34;&gt;virtual BSides Munich 2020&lt;/a&gt;. This blogpost summarizes the content of the talk.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Container Breakouts – Part 3: Docker Socket</title>
      <link>//blog.nody.cc/posts/container-breakouts-part3/</link>
      <pubDate>Thu, 30 Jul 2020 14:20:35 +0200</pubDate>
      <guid>//blog.nody.cc/posts/container-breakouts-part3/</guid>
      <description>&lt;p&gt;This post is part of a series and shows container breakout techniques that can be performed if a container is started with a mounted Docker socket inside the container.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Container Breakouts – Part 2: Privileged Container</title>
      <link>//blog.nody.cc/posts/container-breakouts-part2/</link>
      <pubDate>Tue, 21 Jul 2020 15:42:19 +0200</pubDate>
      <guid>//blog.nody.cc/posts/container-breakouts-part2/</guid>
      <description>&lt;p&gt;This post is part of a series and shows container breakout techniques that can be performed if a container is started privileged.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Container Breakouts – Part 1: Access to root directory of the Host</title>
      <link>//blog.nody.cc/posts/container-breakouts-part1/</link>
      <pubDate>Wed, 15 Jul 2020 08:39:10 +0200</pubDate>
      <guid>//blog.nody.cc/posts/container-breakouts-part1/</guid>
      <description>&lt;p&gt;This post is part of a series and shows container breakout techniques that can be performed if a container is started with access to the host root directory.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Verify your Kubernetes Cluster Network Policies: From Faith to Proof</title>
      <link>//blog.nody.cc/posts/2020-06-kubernetes-network-policy-verification/</link>
      <pubDate>Sat, 27 Jun 2020 11:39:55 +0200</pubDate>
      <guid>//blog.nody.cc/posts/2020-06-kubernetes-network-policy-verification/</guid>
      <description>&lt;p&gt;Implement a technical check that verifies implemented security measurements. In case of network policy, try to establish a blocked network connection. Keep the checks as simple as possible and propagate the results in existing monitoring solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Basics and Principles</title>
      <link>//blog.nody.cc/posts/kubernetes-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//blog.nody.cc/posts/kubernetes-basics/</guid>
      <description>&lt;p&gt;This blogpost is intended to be a background knowledge section for further posts. The content is all around Kubernetes basic principles and reflects more a dictionary then a legitim blog post. The section itself may not explain every nuance of the topic – only as much as necessary as needed in other posts.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
